predictionData <- testData$Text
# predictionData <- list("the rooms were small, the size or a jail cell or so. televisions were small and dated. outside of the motel was not pleasant, very dirty with garbage everywhere. the microwaves were dirty inside when i made a quick snack at night. also the owner was quite questionable, as we're the other residents. very run down motel.. my husband and i also woke up in the middle of the night itching, we pulled up the sheets and found bed bugs. we' then packed our stuff and left. i would never ever recommend anybody stay at this motel. when we approached the owners about the bugs, all they said was we know, we are trying to get rid of them. they shoud be reported to the health inspector.","i will never stay in another la quinta inn again! the pool was outside instead of inside, and the weather was too cool for that. after a long day of travel, we couldn't swim. there were 3 beds, if you include the pull out couch, but it was so cramped we could hardly walk around. there were only 2 towels, we had to go request more. i don't think it would be that hard to put at least 4 towels in the bathroom, it just seemed like no thought was put in to it. there was a coffee pot and coffee in the room, which i was looking forward to, but then i realized, there were only 2 packs of sugar and 2 packs of creamer. all of these may sound like little things, but to me they add up to a lack of care for the customer. la quinta is all about the bottom line, not the customer.")
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results
View(data)
View(data)
source('~/Documents/Practice/DeceptionDetection/svm.R')
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# predictionData <- list("the rooms were small, the size or a jail cell or so. televisions were small and dated. outside of the motel was not pleasant, very dirty with garbage everywhere. the microwaves were dirty inside when i made a quick snack at night. also the owner was quite questionable, as we're the other residents. very run down motel.. my husband and i also woke up in the middle of the night itching, we pulled up the sheets and found bed bugs. we' then packed our stuff and left. i would never ever recommend anybody stay at this motel. when we approached the owners about the bugs, all they said was we know, we are trying to get rid of them. they shoud be reported to the health inspector.","i will never stay in another la quinta inn again! the pool was outside instead of inside, and the weather was too cool for that. after a long day of travel, we couldn't swim. there were 3 beds, if you include the pull out couch, but it was so cramped we could hardly walk around. there were only 2 towels, we had to go request more. i don't think it would be that hard to put at least 4 towels in the bathroom, it just seemed like no thought was put in to it. there was a coffee pot and coffee in the room, which i was looking forward to, but then i realized, there were only 2 packs of sugar and 2 packs of creamer. all of these may sound like little things, but to me they add up to a lack of care for the customer. la quinta is all about the bottom line, not the customer.")
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results
source('~/Documents/Practice/DeceptionDetection/svm.R')
View(results)
source('~/Documents/Practice/DeceptionDetection/svm.R')
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results[2] <- testData$Deceptive
results
source('~/Documents/Practice/DeceptionDetection/svm.R')
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results$Deceptive <- testData$Deceptive
results
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
install.packages("Metrics")
library("Metrics", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
install.packages("ROCR")
library("ROCR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("NLP", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results
source('~/Documents/Practice/DeceptionDetection/svm.R')
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
predict <- sample(c(0, 1), 32, replace=T)
true <- sample(c(0, 1), 32, replace=T)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
pred <- prediction(results$SVM_LABEL, testData$Deceptive);
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
predict <- sample(list(results$SVM_LABEL)(0, 1), 32, replace=T)
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
t = list(results$SVM_LABEL)
source('~/Documents/Practice/DeceptionDetection/svm.R')
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
predict <- list(results$SVM_LABEL)
true <- list(testData$Deceptive)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
source('~/Documents/Practice/DeceptionDetection/svm.R')
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
predict <- list(results$SVM_LABEL)
true <- list(testData$Deceptive)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
source('~/Documents/Practice/DeceptionDetection/svm.R')
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results$Deceptive <- testData$Deceptive
predict <- list(results$SVM_LABEL)
true <- list(testData$Deceptive)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results$Deceptive <- testData$Deceptive
predict <- list(results$SVM_LABEL)
true <- list(testData$Deceptive)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results$Deceptive <- testData$Deceptive
predict <- list(results$SVM_LABEL)
true <- list(testData$Deceptive)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
View(results)
View(results)
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results$Deceptive <- testData$Deceptive
predict <- list(results$SVM_LABEL)
true <- list(testData$Deceptive)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
View(results)
source('~/Documents/Practice/DeceptionDetection/svm.R')
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results$Deceptive <- testData$Deceptive
predict <- list(results$SVM_LABEL)
true <- list(testData$Deceptive)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
View(results)
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results$Deceptive <- testData$Deceptive
predict <- list(results$SVM_LABEL)
true <- list(testData$Deceptive)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
View(results)
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results$Deceptive <- testData$Deceptive
predict <- list(results$SVM_LABEL)
true <- list(testData$Deceptive)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
View(results)
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results$Deceptive <- testData$Deceptive
predict <- list(results$SVM_LABEL)
true <- list(testData$Deceptive)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
View(results)
# Load the data from the csv file
dataDirectory <- "/home/ashwin/Documents/Practice/DeceptionDetection/" # put your own folder here
data <- read.csv(paste(dataDirectory, 'hotel-train.csv', sep=""), header = TRUE, sep="|")
# Create the document term matrix
dtMatrix <- create_matrix(data["Text"])
# Configure the training data
container <- create_container(dtMatrix, data$Deceptive, trainSize=1:397, virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# new data
testData <- read.csv(paste(dataDirectory, 'hotel-test.csv', sep=""), header = TRUE, sep = "|")
predictionData <- testData$Text
# create a prediction document term matrix
predMatrix <- create_matrix(predictionData, originalMatrix=dtMatrix)
# create the corresponding container
predSize = length(predictionData);
predictionContainer <- create_container(predMatrix, labels=rep(0,predSize), testSize=1:predSize, virgin=FALSE)
# predict
results <- classify_model(predictionContainer, model)
results$Deceptive <- testData$Deceptive
predict <- list(results$SVM_LABEL)
true <- list(testData$Deceptive)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
results
retrieved
precision
recall
Fmeasure
View(results)
